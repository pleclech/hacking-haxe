include Makefile

OUTPUT=haxe.exe
EXTENSION=.exe

OCAMLOPT=ocamlopt.opt

kill:
	-@taskkill /F /IM haxe.exe

# allow Ocaml/Mingw as well
NATIVE_LIBS += -I "c:/program files/mingw/lib/"

# use make WODI=wodi32 -f Makefile.win to build using WODI 32bit
ifdef WODI
NATIVE_LIBS += -I "/opt/${WODI}/lib"
endif

# use make MSVC=1 -f Makefile.win to build for OCaml/MSVC

ifeq (${MSVC}, 1)
NATIVE_LIBS = shell32.lib libs/extc/extc_stubs.obj libs/extc/process_stubs.obj libs/extc/zlib/zlib.lib libs/objsize/c_objsize.obj
endif

ifeq (${MSVC_OUTPUT}, 1)
FILTER=sed 's/File "\([^"]\+\)", line \([0-9]\+\), \(.*\)/\1(\2): \3/' tmp.cmi
endif

ifeq (${FD_OUTPUT}, 1)
FILTER=sed '/File/{ N; s/File "\([^"]\+\)", line \([0-9]\+\), characters \([0-9-]\+\):[\r\n]*\(.*\)/\1:\2: characters \3 : \4/ }' tmp.cmi
endif

ifdef FILTER
CC_CMD=($(OCAMLOPT) $(CFLAGS) -c $< 2>tmp.cmi && $(FILTER)) || ($(FILTER) && exit 1)
CC_PARSER_CMD=($(OCAMLOPT) -pp camlp4o $(CFLAGS) -c parser.ml 2>tmp.cmi && $(FILTER)) || ($(FILTER) && exit 1)
endif

package_bin:
	mkdir -p out
	rm -rf $(PACKAGE_FILE_NAME) $(PACKAGE_FILE_NAME).zip temp.zip
	# Copy the package contents to $(PACKAGE_FILE_NAME)
	# Using poor man's cp (zip then unzip), because cp in cygwin is quite broken
	mkdir -p $(PACKAGE_FILE_NAME)
	7za a -y -tzip -mx0 temp.zip $(OUTPUT) haxelib$(EXTENSION) std > log.txt || type log.txt
	cd extra && 7za a -y -tzip -mx0 ../temp.zip LICENSE.txt CONTRIB.txt CHANGES.txt > log.txt || type log.txt
	7za x -y temp.zip -o$(PACKAGE_FILE_NAME) > log.txt || type log.txt
	rm temp.zip
	# archive
	7za a -r -tzip out/$(PACKAGE_FILE_NAME).zip $(PACKAGE_FILE_NAME) > log.txt || type log.txt
	rm -r $(PACKAGE_FILE_NAME)
	rm log.txt extra/log.txt